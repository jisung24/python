# Fly me to the Alpha Centauri

# 공간 이동을 할 수 있는 공간이동장치를 개발함. 

# 하지만 너무 멀리 이동할 경우, 기계에 심각한 결함이 발생함 

# 전에 k광년 이동했을 때는 다음 번엔 
# k-1 k k+1만 이동할 수 있다. 

# 처음 사용 (전에 0광년 이동)
# -1 0 1 광년 이동할 수 있음 => 하지만 -1 0은 의미 x 

# 처음 사용하면 1광년 이동할 수 있음 

# 2번째 => 0  1 2이동할 수 있음 



# 공간 이동 장치를 최소한으로 사용해서 x -> y를 하려고 하는데,
# y 바로 직전에는 1만큼만 이동해야 한다. 

# 최솟값을 구하는 프로그램을 구하여라...! 

# 1. 즉 x => y를 가는데, 공간이동 장치를 최소한으로 사용한다. 
# 2. y바로 직전은 1만 이동...! 

# 3. 즉, x => y - 1을 갈 때 가장 적게 사용해서 갈 수 있는 방법! 

# x : 현재 위치
# y : 목표위치 

# 0 3 
# 공간이동 장치를 1번 무조건 사용해서 y를 -1해줘(어차피 무조건 써야하니까..)
# 0 2까지... 
# 처음엔 -1 0 1을 이동할 수 있음 
# 1을 이동했으면
# 2번째는 0 1 2를 갈 수 있어..! 
# 근데 3번째가 1이어야 하니까 2번째도 1 

# 따라서 3번 

# 1에서 4까지..! 
# 1일때..! 
# -1 0 1 => 1

# 2번째
# 0 1 2 => 2

# 3번째는 이미 사용함

 # 공간 이동장치를 이미 마지막에 사용했다고 침 '


N = int(input())

for i in range(N):
    count = 1
    x, y = map(int, input().split())
    y -= 1 # 공간 이동 장치를 1번 사용했기 때문에 사용한다..! 

    print(f"{x}부터 {y}까지 이동해야 돼!!")
    print("현재까지 사용 횟수 >> ", count)
    answer = []
    prev = 0 # 이전에 사용한 값 => 계속 초기화 시켜줄거야! 
    while True:
        if count == 1:
            # 난 이미 1번을 사용했기 때문에, 처음에 0값도 고려를 해줘야 돼! 
            if x == y:
                # 처음인데 이미 도착했다...? 그럼 안 써도 되지
                break
            else: # 두 값이 달라...! 
                # 그럼 무조건 최대값이 1이기 떄문에 1을 써줘야 돼..! 
                prev = 1 # 이전 값 1썼습니다.~~~
                x += 1 # x + 1해줌  
                count += 1 # 1썼으니 count += 1해줌. 
        
        else: # 처음 사용한 게 아니라면... 
            # 여기 내려왔다는 건... 위에 if에서 else를 했다는 거 아니야..! 
            if x == y:
                # 위에서 1을 가고 끝나서.. 확인해줘야 돼! 
                break
            else: # 아직 다 못 갔는데..! 
                choose = [prev - 1, prev, prev + 1]
                # prev-1은 2가 max인데 1만큼 가도 끝이야 그럼 -1이야 한 칸 뒤로가는 ㄷ게 아니라...! 
                if y - x > prev + 1: # 아직 한참 남았어...! 
                    x += prev + 1
                    prev = prev + 1
                    count += 1
                elif y - x == prev + 1:
                    count += 1
                    break
                elif y - x == prev:
                    count += 1
                    break
                elif y - x == prev - 1:
                    # 여긴 지금 아직 다 못 간 상태야...! 
                    count += 1
                    break

    print(count)  



