# 정렬을 하다가 왜 사용을 하는지? 
# 고급 정렬 알고리즘에서 재귀 용법을 사용한다. 
# 재귀 아주아주 많이 사용됨!! => 너무 중요한 알고리즘



# 재귀 호출이란? 
# 함수 안에서 그 함수를 또 호출되는 형태! 
# ⭐️ 코드를 작성하는 패턴이 있음 ⭐️

# 팩토리얼 
# n! = n * (n-1)!(즉 여기서 공식에서 내가 또 사용이 돼!)

# 재귀함수 일반적인 형태! 
# ❗️일정한 패턴이 있다❗️

# 입력을 받는다. 
# 입력이 일정값 이상이면, 입력보다 작은 값 
# 그게 아니라면 재귀호출 종료! => break를 걸 문장이 꼭 있어야 한다. 


# 재귀호출은 스택의 전형적인 예시이다!!! 
# 스택[-1]에 쌓였던 함수를 계속 호출!!!!!! 
# 재귀를 종료시켜줄 값을 스택 가장 위에 쌓아서 값을 주고 시작을 한다.!!! 
# 

def factorial(number):
    if number <= 1: return number  # 재귀 break문이 꼭 있어야 한다. 
    else:
        return number * factorial(number - 1)

# 자 5를 넣었다고 치면 
# factorial(1) = 1 
# 2 * factorial(1)
# 3 * factorial(2)
# 4 * factorial(3)
# 5 * factorial(4)


# 이런식으로 작동 돼! 
# 파이썬에서는 1000번까지만 재귀함수 호출을 허용한다
# 스택 공간을 1000으로 잡아놓음


